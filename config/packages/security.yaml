security:
    firewalls:
        dev:
            pattern: ^/_trans(/|$)
            security: false
        monitor:
            pattern: ^/(internal/)?(info|health)$
            security: false
        api:
            http_basic: ~
            entry_point: surfnet_stepup_middleware_api.security.json_basic_auth_entry_point
            stateless:  true

    access_control:
        - { path: ^/management, roles: [IS_AUTHENTICATED_FULLY, ROLE_MANAGEMENT] } # can be expanded with hosts: or ip:
        - { path: ^/deprovision, roles: [IS_AUTHENTICATED_FULLY, ROLE_DEPROVISION] }
        - { roles: [IS_AUTHENTICATED_FULLY, ROLE_SS, ROLE_RA, ROLE_READ] }

    providers:
        in_memory:
            memory:
                users:
                    ss:
                        password: "%selfservice_api_password%"
                        roles: 'ROLE_SS'
                    ra:
                        password: "%registration_authority_api_password%"
                        roles: 'ROLE_RA'
                    apireader:
                        password: "%readonly_api_password%"
                        roles: 'ROLE_READ'
                    management:
                        password: "%management_password%"
                        roles: 'ROLE_MANAGEMENT'
                    lifecycle:
                        password: "%lifecycle_password%"
                        roles: 'ROLE_DEPROVISION'

    password_hashers:
        Symfony\Component\Security\Core\User\InMemoryUser:
            algorithm: plaintext
