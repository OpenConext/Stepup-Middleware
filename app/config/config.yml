imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%default_locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%default_locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        name: sess_middleware
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: middleware
        connections:
            middleware:
                driver:   "%database_driver%"
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_middleware_name%"
                user:     "%database_middleware_user%"
                password: "%database_middleware_password%"
                charset:  UTF8
            gateway:
                driver:   "%database_driver%"
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_gateway_name%"
                user:     "%database_gateway_user%"
                password: "%database_gateway_password%"
                charset:  UTF8
            deploy:
                driver:   "%database_driver%"
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_middleware_name%"
                user:     "%database_deploy_user%"
                password: "%database_deploy_password%"
                charset:  UTF8
        types:
            institution: Surfnet\StepupMiddleware\ApiBundle\Doctrine\Type\InstitutionType
            stepup_datetime: Surfnet\StepupMiddleware\ApiBundle\Doctrine\Type\DateTimeType
            stepup_second_factor_status: Surfnet\StepupMiddleware\ApiBundle\Doctrine\Type\SecondFactorStatusType
    orm:
        default_entity_manager: middleware
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            middleware:
                connection: middleware
                naming_strategy: doctrine.orm.naming_strategy.underscore
                mappings:
                    api:
                        mapping: true
                        type: annotation
                        dir: %kernel.root_dir%/../src/Surfnet/StepupMiddleware/ApiBundle/Identity
                        prefix: Surfnet\StepupMiddleware\ApiBundle\Identity
                        is_bundle: false
                dql:
                    string_functions:
                        MATCH_AGAINST: \Surfnet\StepupMiddleware\ApiBundle\Doctrine\Query\MatchAgainst
            gateway:
                connection: gateway
                naming_strategy: doctrine.orm.naming_strategy.underscore
                mappings:
                    SurfnetStepupMiddlewareGatewayBundle:
                        mapping: true
                        type: annotation
                        is_bundle: true
            deploy:
                connection: deploy

doctrine_migrations:
    namespace: Surfnet\StepupMiddleware\Migrations
    table_name: migration_versions
    name: Step-up Middleware Migrations

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

nelmio_security:
    # Content Security Policy
    csp:
        # Keep people from posting fake security reports (security through obscurity)
        report_uri: /nelmio/csp/report/5dfbe9b445699acac9aa29de802dd6e20815f6e1
        # Log to security channel
        report_logger_service: monolog.logger.security
        # Content types: default, script, object, style, img, media, frame, font, connect
        default: [ self ]
    signed_cookie:
        names: ['*']
    encrypted_cookie:
        names: ['*']
    forced_ssl:
        enabled: false

surfnet_stepup:
    logging:
        application_name: middleware
    loa_definition:
        loa1: %stepup_loa_loa1%
        loa2: %stepup_loa_loa2%
        loa3: %stepup_loa_loa3%

monolog:
    handlers:
        main:
            type: group
            members:
                - main_graylog
                - main_logfile
        main_graylog:
            type: buffer
            handler: graylog
            level: NOTICE
        main_logfile:
            type: stream
            handler: logfile
            level: NOTICE
            path: %kernel.logs_dir%/%kernel.environment%.log
        graylog:
            type: gelf
            publisher: { hostname: %graylog_hostname% }
            formatter: surfnet_stepup.monolog.full_message_exception_gelf_message_formatter

surfnet_stepup_middleware_command_handling:
    self_service_email_verification_url_template: %self_service_email_verification_url_template%
    email_sender:
        name: %email_sender_name%
        email: %email_sender_email%

surfnet_stepup_middleware_middleware:
    email_verification_window: %email_verification_window%
